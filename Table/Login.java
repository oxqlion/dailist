/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Table;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Writer;
import static java.lang.System.in;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Scanner;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        login = new javax.swing.JButton();
        usernamefield = new javax.swing.JTextField();
        passwordfield = new javax.swing.JTextField();
        Register = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Username : ");

        jLabel2.setText("Password : ");

        login.setText("Login");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        usernamefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernamefieldActionPerformed(evt);
            }
        });

        Register.setText("Register");
        Register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passwordfield))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(login, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(104, 104, 104)
                                .addComponent(Register))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(usernamefield, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(56, 56, 56))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(usernamefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(passwordfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(login)
                    .addComponent(Register))
                .addGap(54, 54, 54))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static boolean isExist(String inputUsername) throws IOException {
        FileReader fileInput = null;
        BufferedReader bufferInput = null;
        try {
            fileInput = new FileReader("accounts.txt");
            bufferInput = new BufferedReader(fileInput);
        } catch (Exception e) {
            System.err.println("Error 500: Database tidak ditemukan");
            File file = new File("src/accounts.txt");
        }

        int a = 0;

        String data = bufferInput.readLine();
        while (data != null) {
            try {
                StringTokenizer stringToken = new StringTokenizer(data, "-");
                String username = stringToken.nextToken();

                if (inputUsername.equals(username)) {
                    return false;
                }

                data = bufferInput.readLine();
            } catch (Exception e) {
                break;
            }
        }

        assert fileInput != null;
        fileInput.close();
        bufferInput.close();
        return true;
    }

    public String SignIn(String usernameInput, String passwordInput) throws IOException {

        FileReader fileInput = null;
        BufferedReader bufferInput = null;
        try {
            fileInput = new FileReader("accounts.txt");
            bufferInput = new BufferedReader(fileInput);
        } catch (Exception e) {
            System.err.println("Error 500: Database tidak ditemukan");
            File file = new File("src/accounts.txt");
        }

        String inputUsername = usernameInput;
        String inputPassword = passwordInput;

        String user = "";
        int a = 0, b = 0;

        String data = bufferInput.readLine();
        while (data != null) {
            StringTokenizer stringToken = new StringTokenizer(data, "-");
            String username = stringToken.nextToken();
            String passwowrd = stringToken.nextToken();

            if (inputUsername.equals(username) && inputPassword.equals(passwowrd)) {
                JOptionPane.showMessageDialog(this, "Logged in");
                user = username;
                usernamefield.setText("");
                passwordfield.setText("");

                NewJFrame homepage = new NewJFrame(user);
                homepage.setVisible(true);

                this.dispose();
            } else if (inputUsername.equals(username) && !inputPassword.equals(passwowrd)) {
                usernamefield.setText("");
                passwordfield.setText("");
                JOptionPane.showMessageDialog(this, "Wrong password");

            } else if (!inputUsername.equals(username) && inputPassword.equals(passwowrd)) {
                a++;
            }

            if (!inputUsername.equals(username) && !inputPassword.equals(passwowrd)) {
                a++;
            }

            b++;

            data = bufferInput.readLine();
        }
        System.out.println("a : " + a + " b : " + b);
        if (b == a) {
            usernamefield.setText("");
            passwordfield.setText("");
            JOptionPane.showMessageDialog(this, "Couldn't find account");

        }

        assert fileInput != null;
        fileInput.close();
        bufferInput.close();

        return user;
    }

    public boolean SignUp(String usernameInput, String passwordInput) throws IOException {
        FileWriter fileOutput = new FileWriter("accounts.txt", true);
        BufferedWriter bufferOutput = new BufferedWriter(fileOutput);

        String username, password;
        username = usernameInput;

        if (!isExist(username)) {
            usernamefield.setText("");
            passwordfield.setText("");
            JOptionPane.showMessageDialog(this, "Username sudah terpakai. Harap masukkan username lain");
            return false;
        }

        password = passwordInput;

        bufferOutput.write(username + "-" + password);

        bufferOutput.newLine();
        bufferOutput.flush();

        fileOutput.close();
        bufferOutput.close();
        return true;
    }


    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
        // TODO add your handling code here:

        String username = usernamefield.getText();
        String password = passwordfield.getText();

        try {
            SignIn(username, password);

            String text = username;
        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_loginActionPerformed

    private void RegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterActionPerformed
        // TODO add your handling code here:

        String username = usernamefield.getText();
        String password = passwordfield.getText();

        try {

            if (SignUp(username, password)) {
                NewJFrame homepage = new NewJFrame(username);
                homepage.setVisible(true);
                this.dispose();
            }

        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_RegisterActionPerformed

    private void usernamefieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernamefieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernamefieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton Register;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    public javax.swing.JButton login;
    public javax.swing.JTextField passwordfield;
    public javax.swing.JTextField usernamefield;
    // End of variables declaration//GEN-END:variables
}
